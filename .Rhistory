install.packages(c("openssl", "rmarkdown", "withr", "xfun"))
library(ScreenR)
library(ggplot2)
library(dplyr)
library(tidyr)
theme_set(theme_light())
knitr::opts_chunk$set(fig.width=10, fig.height=7)
data(CountTable_THP1_CONTROL_vs_MET)
data(Table_Annotation)
data <- tidyr::tibble(CountTable_THP1_CONTROL_vs_MET)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("decompTumor2Sig")
?normalize_data
??normalize_data
library(ggplot2)
library(dplyr)
library(tidyr)
knitr::opts_chunk$set(fig.width=10, fig.height=7)
library(ScreenR)
data(CountTable_THP1_CONTROL_vs_MET)
data(Table_Annotation)
data <- tidyr::tibble(CountTable_THP1_CONTROL_vs_MET)
colnames(data) <- c(
"Barcode", "T0", "T48_postPURO", "Day3_Met_A", "Day3_Met_B", "Day3_Met_C",
"Day3_DMSO_A", "Day3_DMSO_B", "Day3_DMSO_C", "Day6_Met_A", "Day6_Met_B",
"Day6_Met_C", "Day6_DMSO_A", "Day6_DMSO_B", "Day6_DMSO_C"
)
data <- data %>%
dplyr::mutate(Barcode = as.factor(Barcode)) %>%
dplyr::filter(Barcode != "*")
total_Annotation <- Table_Annotation %>%
tibble::tibble() %>%
dplyr::mutate(Barcode = as.factor(.$Barcode))
total_Annotation
groups <- colnames(data)[2:length(colnames(data))]
groups <- gsub("(.*)_\\w+", "\\1", groups)
groups <- factor(x = groups, levels = unique(groups))
groups
palette <- c(
"#66c2a5", "#fc8d62", rep("#8da0cb", 3),
rep("#e78ac3", 3),
rep("#a6d854", 3),
rep("#ffd92f", 3)
)
object <- create_screenR_object(
table = data, annotation = total_Annotation, groups = groups,
replicates = c("")
)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
install.packages("ggvenn")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
install.packages("roxygen2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
BiocManager::install("edgeR", version = 3.32)
BiocManager::install("edgeR", version = "3.32")
BiocManager::install(pkgs = "edgeR", version = "3.32")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
BiocManager::install("edgeR")
BiocManager::install("edgeR")
BiocManager::install("edgeR")
which R
BiocManager::install("edgeR")
cite("limma")
citation("limma")
packages <- c("limma", "edgeR", "deseq2", "ChIPseeker")
citations <-  purrr::map_chr(.x = packages, ~citation(.x))
citations <-  purrr::map(.x = packages, ~citation(.x))
packages <- c("limma", "edgeR", "DESeq2", "ChIPseeker")
citations <-  purrr::map(.x = packages, ~citation(.x))
BiocManager::install("DESeq2")
packages <- c("limma", "edgeR", "DESeq2", "ChIPseeker")
citations <-  purrr::map(.x = packages, ~citation(.x))
install.packages("ggven")
install.packages("ggvenn")
?tibble
data.frame(Gene = c('A', 'B', 'C', 'D', 'E'))
tibble(Gene = c('A', 'B', 'C', 'D', 'E'))
tibble::tibble(Gene = c('A', 'B', 'C', 'D', 'E'))
library(tidyverse)
theme_set(theme_light())
csetwd("~/Documents/IEO/Palbo_project/")
knitr::opts_chunk$set(echo = TRUE)
theme_set(theme_light())
setwd("/Users/ieo5571/Documents/IEO/Palbo_project/")
library(tidyverse)
library(ChIPseeker)
Palbo_seeker <- readPeakFile("Peaks_treatment/Palbo_H3K27ac_vs_input_peaks.bed")
MC2580_seeker <- readPeakFile("Peaks_treatment/MC2580_H3K27ac_vs_input_peaks.bed")
Combination_seeker <-
readPeakFile("Peaks_treatment/Combination_H3K27ac_vs_input_peaks.bed")
treatment_seeker <-
GenomicRanges::GRangesList(Palbo = Palbo_seeker,
MC2580 = MC2580_seeker,
Combination = Combination_seeker)
col <- c(Palbo='orange', MC2580='green', Combination = "red")
covplot(treatment_seeker) +
facet_grid(chr ~ .id) +
scale_color_manual(values=col) +
scale_fill_manual(values=col)
doParallel::registerDoParallel(cores = 8)
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id) +
scale_color_manual(values=col) +
scale_fill_manual(values=col)
col <- c(Palbo='#fdae6b', MC2580='#31a354', Combination = "#f03b20")
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id, scales = "free") +
scale_color_manual(values=col) +
scale_fill_manual(values=col)
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id, scales = "free") +
scale_color_manual(values=col) +
scale_fill_manual(values=col)  + theme(legend.position = "none")
col <- factor(col, levels = c("Palbo", "MC2580", "Combination"))
col
col <- c(Palbo='#fdae6b', MC2580='#31a354', Combination = "#f03b20")
col <- factor(col, levels = c("fdae6b", "31a354", "f03b20"))
col
col <- c('#fdae6b', '#31a354', "#f03b20")
col <- factor(col, levels = c("fdae6b", "31a354", "f03b20"))
col
col <- c('#fdae6b', '#31a354', "#f03b20")
col
col <- factor(col, levels = c("fdae6b", "31a354", "f03b20"))
col
col <- c(Palbo='#fdae6b', MC2580='#31a354', Combination = "#f03b20")
col <- factor(col, levels = c("#fdae6b", "#31a354", "#f03b20"))
col
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id, scales = "free") +
scale_color_manual(values=col) +
scale_fill_manual(values=col)  + theme(legend.position = "none")
DMSO_seeker <- readPeakFile("Peaks_treatment/DMSO_H3K27ac_vs_input_peaks.bed")
treatment_seeker <-
GenomicRanges::GRangesList(DMSO = DMSO_seeker,
Palbo = Palbo_seeker,
MC2580 = MC2580_seeker,
Combination = Combination_seeker)
col <- c(DMSO = "#3182bd", Palbo='#fdae6b',
MC2580='#31a354', Combination = "#f03b20")
col <- factor(col, levels = c("#3182bd","#fdae6b", "#31a354", "#f03b20"))
col
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id, scales = "free") +
scale_color_manual(values=col) +
scale_fill_manual(values=col)  + theme(legend.position = "none")
col
col <- factor( c("#3182bd","#fdae6b", "#31a354", "#f03b20"),
levels = c("#3182bd","#fdae6b", "#31a354", "#f03b20"))
col
col <- factor(c("#f03b20", "#31a354", "#e6550d", "#3182bd"),
levels = c("#f03b20", "#31a354", "#e6550d", "#3182bd"))
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id, scales = "free") +
scale_color_manual(values=col) +
scale_fill_manual(values=col)  +
theme(legend.position = "none")
covplot(treatment_seeker, weightCol = "V5") +
facet_grid(chr ~ .id, scales = "free") +
#scale_color_manual(values=col) +
#scale_fill_manual(values=col)  +
theme(legend.position = "none")
getChrCov <- function(peak, weightCol, chrs, xlim, lower=1) {
if (is(peak, "GRanges")) {
peak.gr <- peak
} else if (file.exists(peak)) {
peak.gr <- readPeakFile(peak, as="GRanges")
} else {
stop("peak should be a GRanges object or a peak file...")
}
if ( is.null(weightCol)) {
peak.cov <- coverage(peak.gr)
} else {
weight <- mcols(peak.gr)[[weightCol]]
peak.cov <- coverage(peak.gr, weight=weight)
}
cov <- lapply(peak.cov, slice, lower=lower)
get.runValue <- function(x) {
y <- runValue(x)
sapply(y@listData, mean)
## value <- x@subject@values
## value[value != 0]
}
chr <- start <- end <- cnt <- NULL
ldf <- lapply(1:length(cov), function(i) {
x <- cov[[i]]
if (length(x@ranges) == 0) {
msg <- paste0(names(cov[i]),
" dosen't contain signal higher than ",
lower)
message(msg)
return(NA)
}
data.frame(chr   = names(cov[i]),
start = start(x),
end   = end(x),
cnt   = get.runValue(x)
# the following versions are more slower
# unlist(runValue(x))
# sapply(x, runValue)
)
})
ldf <- ldf[!is.na(ldf)]
df <- do.call("rbind", ldf)
chr.sorted <- sortChrName(as.character(unique(df$chr)))
df$chr <- factor(df$chr, levels=chr.sorted)
if (!is.null(chrs) && !all(is.na(chrs)) && all(chrs %in% chr.sorted)) {
df <- df[df$chr %in% chrs, ]
}
if (!is.null(xlim) && !all(is.na(xlim)) && is.numeric(xlim) && length(xlim) == 2) {
df <- df[df$start >= xlim[1] & df$end <= xlim[2],]
}
df2 <- group_by(df, chr, start, end) %>% summarise(value=sum(cnt))
return(df2)
}
ltm <- lapply(treatment_seeker, getChrCov, weightCol = "V5",
chrs = NULL, xlim = NULL, lower = 1)
col <- factor(c("black", "black", "black", "black"),
levels = c("black"))
col
covplot(treatment_seeker, weightCol = "V5", ) +
facet_grid(chr ~ .id, scales = "free") +
#scale_color_manual(values=col) +
#scale_fill_manual(values=col)  +
theme(legend.position = "none")
covplot(treatment_seeker, weightCol = "V5", ) +
facet_grid(chr ~ .id, scales = "free") +
scale_color_manual(values=col) +
scale_fill_manual(values=col)  +
theme(legend.position = "none")
install.packages()
install.packages("roxygen2")
install.packages("strex")
install.packages("pdflatex")
tinytex::install_tinytex()
# to uninstall TinyTeX, run
# tinytex::uninstall_tinytex()
tinytex::install_tinytex()
# to uninstall TinyTeX, run
# tinytex::uninstall_tinytex()
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_tinytex()
tools::texi2pdf()
install.packages("usethis")
usethis::use_version(which = "minor")
usethis::use_version(which = "minor")
